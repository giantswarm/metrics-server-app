apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    giantswarm.io/service-type: {{ .Values.serviceType }}
    app: {{ .Values.k8sAppLabel }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.k8sAppLabel }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        giantswarm.io/service-type: {{ .Values.serviceType }}
        app: {{ .Values.k8sAppLabel }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.groupID }}
      priorityClassName: giantswarm-critical
      containers:
        - name: metrics-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /metrics-server
            {{- range .Values.args }}
            - {{ . | quote }}
            {{- end }}
        {{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
